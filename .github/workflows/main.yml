name: Chat Server CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  S3_BUCKET_NAME: my-chat-deploy-bucket

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Make Directory
        run: mkdir -p deploy

      - name: Copy Jar
        run: |
          cp ./build/libs/*-SNAPSHOT.jar ./deploy/app.jar || cp ./build/libs/*.jar ./deploy/app.jar

      # ▼▼ 시크릿은 push(main) 에서만 주입
      - name: Write application.yml from secret
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        shell: bash
        run: |
          mkdir -p deploy
          # 멀티라인 안전 작성 (echo 대신 printf)
          printf '%s' "${{ secrets.APPLICATION_YML }}" > deploy/application.yml
          # 비어 있으면 실패시켜서 조기 감지
          test -s deploy/application.yml || { echo "ERROR: application.yml is empty"; exit 1; }
          # 개행/BOM 정리
          sudo apt-get update -y && sudo apt-get install -y dos2unix
          dos2unix deploy/application.yml || true
          sed -i '1s/^\xEF\xBB\xBF//' deploy/application.yml

      - name: Make zip file
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: zip -r ./chat.zip ./deploy appspec.yml scripts
        shell: bash

      - name: Configure AWS credentials
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: aws s3 cp --region ap-northeast-2 ./chat.zip s3://$S3_BUCKET_NAME/

      - name: Deploy
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
            --application-name Chat-Application-CD \
            --deployment-group-name Chat-Deployment-Group \
            --file-exists-behavior OVERWRITE \
            --s3-location bucket=my-chat-deploy-bucket,bundleType=zip,key=chat.zip \
            --region ap-northeast-2