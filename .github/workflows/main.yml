name: Chat Server CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: my-chat-deploy-bucket
  AWS_CODE_DEPLOY_APPLICATION: Chat-Application-CD
  AWS_CODE_DEPLOY_GROUP: Chat-Deployment-Group
  ZIP_FILE: chat-${{ github.sha }}.zip   # ← 업로드/배포에서 동일하게 쓸 이름

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application.yml from secret
        run: |
          mkdir -p src/main/resources
          # 멀티라인 안전
          printf "%s" "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build (skip tests)
        run: ./gradlew clean build -x test

      # === 배포 번들 구성: JAR + appspec.yml + scripts 디렉토리 ===
      - name: Prepare deployment bundle
        run: |
          ls -l build/libs
          mkdir -p deploy
          cp build/libs/*.jar deploy/
          cp appspec.yml deploy/
          cp -r scripts deploy/
          cd deploy
          zip -r "../${ZIP_FILE}" .

      # AWS 자격증명 (가능하면 v4 권장)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload to S3
        run: |
          aws s3 cp --region "${AWS_REGION}" "${ZIP_FILE}" "s3://${S3_BUCKET_NAME}/${ZIP_FILE}"

      - name: Create CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name "${AWS_CODE_DEPLOY_APPLICATION}" \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name "${AWS_CODE_DEPLOY_GROUP}" \
            --s3-location bucket="${S3_BUCKET_NAME}",key="${ZIP_FILE}",bundleType=zip